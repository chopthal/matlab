function AnalyzeKinetics(app, parentPath)

app.UIFigure.UserData.Analyte = ParsingInfo(parentPath);
app.UIDropdownName.Items = {app.UIFigure.UserData.Analyte.Name};
app.UIFigure.Visible = 'on';

UIProgressDialog = ...
    uiprogressdlg(app.UIFigure, 'Title', 'Please wait', ...
    'Message', 'Fitting Curve(s)...', ...
    'Indeterminate', 'on');
pause(0.01)
for i = 1:size(app.UIFigure.UserData.Analyte, 2)
    [app.UIFigure.UserData.Analyte(i).k,...
        app.UIFigure.UserData.Analyte(i).kName,...
        app.UIFigure.UserData.Analyte(i).chi2,...
        app.UIFigure.UserData.Analyte(i).FittedT,...
        app.UIFigure.UserData.Analyte(i).FittedR]...
            = ReadyForCurveFitting(...
                app.UIFigure.UserData.Analyte(i).Concentration,...
                app.UIFigure.UserData.Analyte(i).EventTime,...            
                app.UIFigure.UserData.Analyte(i).XData,...
                app.UIFigure.UserData.Analyte(i).YData,...
                app.UIFigure.UserData.Analyte(i).FittingVariable);
end    

app.UIDropdownName.ValueChangedFcn(app.UIFigure.UserData.Analyte, app)
%% Set Fitting variables to Default
for i = 1:size(app.UIFigure.UserData.Analyte, 2)
    app.UIFigure.UserData.Analyte(i).FittingVariable = struct;
    app.UIFigure.UserData.Analyte(i).FittingVariable = app.UIFigure.UserData.Analyte(i).DefaultFittingVariable;
end

close(UIProgressDialog)

end